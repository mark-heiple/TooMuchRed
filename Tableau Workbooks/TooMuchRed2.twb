<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0216.1925                               -->
<workbook source-build='10.2.0 (10200.17.0216.1925)' source-platform='mac' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='growth_gdp_debt' inline='true' name='federated.11peoot0whbbyi1dsizfx0bo9ack' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='growth_gdp_debt' name='textscan.06yu8d61b6n1fg16irrft02tvghd'>
            <connection class='textscan' directory='/Users/markh/Documents/Northwestern/P455/OurShow/TooMuchRed/dataForSlides' filename='growth_gdp_debt.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.06yu8d61b6n1fg16irrft02tvghd' name='growth_gdp_debt.csv' table='[growth_gdp_debt#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='real' name='gdp' ordinal='1' />
            <column datatype='real' name='debt' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[growth_gdp_debt.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp]</local-name>
            <parent-name>[growth_gdp_debt.csv]</parent-name>
            <remote-alias>gdp</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>debt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[debt]</local-name>
            <parent-name>[growth_gdp_debt.csv]</parent-name>
            <remote-alias>debt</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[growth_gdp_debt.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.11peoot0whbbyi1dsizfx0bo9ack].[sum:debt:qk]&quot;' value='Debt Growth (%)' />
          <alias key='&quot;[federated.11peoot0whbbyi1dsizfx0bo9ack].[sum:gdp:qk]&quot;' value='GDP Growth (%)' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Debt' datatype='real' name='[debt]' role='measure' type='quantitative' />
      <column caption='Gdp' datatype='real' name='[gdp]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[debt]' derivation='Sum' name='[sum:debt:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gdp]' derivation='Sum' name='[sum:gdp:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.474128' measure-ordering='alphabetic' measure-percentage='0.525872' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#75a1c7'>
              <bucket>&quot;[federated.11peoot0whbbyi1dsizfx0bo9ack].[sum:gdp:qk]&quot;</bucket>
            </map>
            <map to='#f17b79'>
              <bucket>&quot;[federated.11peoot0whbbyi1dsizfx0bo9ack].[sum:debt:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Medium' fontsize='26'>Debt Has Been Growing Faster than GDP Since 1975</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='growth_gdp_debt' name='federated.11peoot0whbbyi1dsizfx0bo9ack' />
          </datasources>
          <datasource-dependencies datasource='federated.11peoot0whbbyi1dsizfx0bo9ack'>
            <column caption='Debt' datatype='real' name='[debt]' role='measure' type='quantitative' />
            <column caption='Gdp' datatype='real' name='[gdp]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[debt]' derivation='Sum' name='[sum:debt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gdp]' derivation='Sum' name='[sum:gdp:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11peoot0whbbyi1dsizfx0bo9ack].[sum:gdp:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='subtitle' class='0' field='[federated.11peoot0whbbyi1dsizfx0bo9ack].[sum:gdp:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.11peoot0whbbyi1dsizfx0bo9ack].[sum:gdp:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.11peoot0whbbyi1dsizfx0bo9ack].[sum:debt:qk]' scope='rows' value='Growth of Debt vs. GDP (%)' />
            <format attr='subtitle' class='0' field='[federated.11peoot0whbbyi1dsizfx0bo9ack].[sum:debt:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.11peoot0whbbyi1dsizfx0bo9ack].[sum:debt:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.11peoot0whbbyi1dsizfx0bo9ack].[sum:gdp:qk]' scope='rows' value='Growth of GDP (%)' />
            <format attr='display' class='0' field='[federated.11peoot0whbbyi1dsizfx0bo9ack].[sum:gdp:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.11peoot0whbbyi1dsizfx0bo9ack].[sum:debt:qk]' value='16' />
            <format attr='font-size' field='[federated.11peoot0whbbyi1dsizfx0bo9ack].[none:year:qk]' value='16' />
            <format attr='font-size' field='[federated.11peoot0whbbyi1dsizfx0bo9ack].[sum:gdp:qk]' value='16' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.11peoot0whbbyi1dsizfx0bo9ack].[sum:debt:qk]' value='18' />
            <format attr='font-size' field='[federated.11peoot0whbbyi1dsizfx0bo9ack].[none:year:qk]' value='18' />
            <format attr='font-size' field='[federated.11peoot0whbbyi1dsizfx0bo9ack].[sum:gdp:qk]' value='18' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11peoot0whbbyi1dsizfx0bo9ack].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.11peoot0whbbyi1dsizfx0bo9ack].[sum:debt:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11peoot0whbbyi1dsizfx0bo9ack].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.11peoot0whbbyi1dsizfx0bo9ack].[sum:gdp:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11peoot0whbbyi1dsizfx0bo9ack].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.11peoot0whbbyi1dsizfx0bo9ack].[sum:debt:qk] + [federated.11peoot0whbbyi1dsizfx0bo9ack].[sum:gdp:qk])</rows>
        <cols>[federated.11peoot0whbbyi1dsizfx0bo9ack].[none:year:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.11peoot0whbbyi1dsizfx0bo9ack].[:Measure Names]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11peoot0whbbyi1dsizfx0bo9ack].[:Measure Names]</field>
            <field>[federated.11peoot0whbbyi1dsizfx0bo9ack].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
